---
name: test
on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Python ${{ matrix.python-version }}, CrateDB ${{ matrix.cratedb-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'macos-latest', 'windows-2019']
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11']
        cratedb-version: ['4.8.4', '5.2.0']
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      CRATEDB_VERSION: ${{ matrix.cratedb-version }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'
          cache-dependency-path: 'setup.py'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ".[test,devel]"

      - name: Test
        run: |
          isort --check --diff crate/ tests/ setup.py
          flake8 crate/crash
          coverage run -m unittest -v

  pypi:
    name: Build & publish package to pypi
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Build package
        run: |
          python -m pip install twine wheel
          python setup.py sdist bdist_wheel
          twine check dist/*.tar.gz

      - name: Publish package to PyPI
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
