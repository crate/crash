.. _formats:

================
Response Formats
================

.. _format_tabluar:

tabular
=======

This is the default output format. It prints the SQL response in a tabular form.
Each column of the table represents a selected column of the SQL statement.

Example::

    +--------+---------+
    | name   | version |
    +--------+---------+
    | crate1 | 0.46.3  |
    +--------+---------+
    | crate2 | 0.46.3  |
    +--------+---------+

.. _format_json:

json
====

The ``json`` format prints the result as JSON formatted object array where
the key of the object is the column name and the value the value of the row.

This is useful if you want to print the result of an SQL statement into a file.

Example::

    [
      {
        "name": "crate1",
        "version": "0.46.3"
      },
      {
        "name": "crate2",
        "version": "0.46.3"
      }
    ]


.. _format_json_row:

json_row
========

This format is related to `format_json`_. However it prints each dataset
row-by-row in separate lines. This output is compatible with ``COPY FROM``
statement. Therefore it is useful if you want to export specific datasets in
order to import them later via ``COPY FROM``.

Example::

  {"name": "crate1", "version": "0.46.3"}
  {"name": "crate2", "version": "0.46.3"}


.. _format_csv:

csv
===

The ``csv`` format prints the resuls as a comma separated value (csv) list,
where the delimiter is a comma (``,``), the quote character is a single quote (``''``),
and the escape character is a blackslash (``\``). Please note that column headers
that contain a single quote (e.g. nested objects) will be escaped.

The first line of the csv output contains the name of the selected columns.

Example::

    name,version
    crate1,0.46.3
    crate2,0.46.3

However, ``objects`` or ``arrays`` are returned as a (``JSON``-) string:

Example::

    name,settings[\'udc\']
    crate,'{"enabled": true, "initial_delay": "10m", "interval": "1d", "url": "https://udc.crate.io"}'


.. _format_raw:

raw
===

The ``raw`` format prints the results as it is retured by the CrateDB Python library.
It contains a JSON object with 4 keys: ``cols``, ``rows``, ``rowcount``, and ``duration``.

Example::

    {
      "rows": [
        [
          "crate1",
          "0.46.0"
        ],
        [
          "crate2",
          "0.46.0"
        ]
      ],
      "cols": [
        "name",
        "0.46.3"
      ],
      "rowcount": 1,
      "duration": 0.000
    }

.. _format_mixed:

mixed
=====

The ``mixed`` output lists each column in a row and multiple rows are separated by a line delimiter.
The name of the column is on the left, separated by ``|`` from the value on the right side.

Example::

    name    | crate1
    version | 0.46.3
    ---------------------------------------------------------------
    name    | crate2
    version | 0.46.3
    ---------------------------------------------------------------
